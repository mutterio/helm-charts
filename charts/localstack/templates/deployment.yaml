apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "localstack.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "localstack.name" . }}
    helm.sh/chart: {{ include "localstack.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "localstack.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "localstack.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: services
              containerPort: {{ .Values.localstack.port }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: USE_SSL
              value: !!string {{ .Values.localstack.useSsl }}
            - name: SERVICES
              value: {{ join "," .Values.localstack.services }}
            {{ if .Values.persistence.enabled }}
            - name: DATA_DIR
              value: "/tmp/localstack/data"
            {{ end }}
            - name: DOCKER_HOST
              value: unix:///var/run/docker.sock
          volumeMounts:
          - name: dockersock
            mountPath: /var/run/docker.sock
          - name: datadir
            mountPath: /tmp/localstack
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      # @todo ensure correct
      volumes:
        - name: datadir
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "localstack.fullname" .)}}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: dockersock
          emptyDir: {}
        